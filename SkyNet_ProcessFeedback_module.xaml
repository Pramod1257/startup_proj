<Activity mc:Ignorable="sap sap2010 sads" x:Class="mailhub_feedback_queue_module" this:mailhub_feedback_queue_module.inStatus="Completed" this:mailhub_feedback_queue_module.inDoNotSendBotCompletedNotification="False"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="inAssetName" Type="InArgument(x:String)" />
    <x:Property Name="outNoErrors" Type="OutArgument(x:Boolean)" />
    <x:Property Name="inRecipient" Type="InArgument(x:String)" />
    <x:Property Name="inSubject" Type="InArgument(x:String)" />
    <x:Property Name="inBody" Type="InArgument(x:String)" />
    <x:Property Name="inAttachment" Type="InArgument(x:String)" />
    <x:Property Name="inTaskSeq" Type="InArgument(x:Int32)" />
    <x:Property Name="inStatus" Type="InArgument(x:String)" />
    <x:Property Name="inTransactionID" Type="InArgument(x:String)" />
    <x:Property Name="inProjectId" Type="InArgument(x:String)" />
    <x:Property Name="inProjectName" Type="InArgument(x:String)" />
    <x:Property Name="inDoNotSendBotCompletedNotification" Type="InArgument(x:Boolean)" />
  </x:Members>
  <this:mailhub_feedback_queue_module.inAssetName>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:mailhub_feedback_queue_module.inAssetName>
  <this:mailhub_feedback_queue_module.inRecipient>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:mailhub_feedback_queue_module.inRecipient>
  <this:mailhub_feedback_queue_module.inSubject>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:mailhub_feedback_queue_module.inSubject>
  <this:mailhub_feedback_queue_module.inBody>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:mailhub_feedback_queue_module.inBody>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>mailhub_feedback_queue_module_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Framework.Activities</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Checkpoint.Activities</x:String>
      <x:String>UiPath.DataTable.Activities</x:String>
      <x:String>UiPath.Dialog.Activities</x:String>
      <x:String>UiPath.FileSystem.Activities</x:String>
      <x:String>UiPath.PowerShell.Activities</x:String>
      <x:String>UiPath.RegEx.Activities</x:String>
      <x:String>UiPath.FTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.XPS.Activities</x:String>
      <x:String>UiPath.Enterprise.Activities.Assets</x:String>
      <x:String>UiPath.Enterprise.Activities.Process</x:String>
      <x:String>UiPath.Enterprise.Activities.Queues</x:String>
      <x:String>UiPath.Enterprise.Activities</x:String>
      <x:String>UiPath.Script.Activities</x:String>
      <x:String>UiPath.Script.Activities.PowerShell</x:String>
      <x:String>UiPath.Script.Activities.AutoHotKey</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.JSON.Activities</x:String>
      <x:String>UiPath.REST.Activities</x:String>
      <x:String>UiPath.SOAP.Activities</x:String>
      <x:String>UiPath.XML.Activities</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Abbyy.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Data.OracleClient</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Framework.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.FTP.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Enterprise.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Script.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.OracleClient</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <TryCatch DisplayName="Try Main" sap2010:WorkflowViewState.IdRef="TryCatch_19">
    <TryCatch.Variables>
      <Variable x:TypeArguments="x:String" Name="skynetDBstring" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="skynetDBconnection" />
      <Variable x:TypeArguments="x:String" Name="skynetDBPassUnsecure" />
      <Variable x:TypeArguments="x:String" Name="taskTable" />
      <Variable x:TypeArguments="x:Boolean" Name="connectedToDB" />
      <Variable x:TypeArguments="x:String" Name="skynetDBuser" />
      <Variable x:TypeArguments="ss:SecureString" Name="skynetDBpassword" />
      <Variable x:TypeArguments="x:String" Name="adminDL" />
      <Variable x:TypeArguments="x:String" Name="updateSQL" />
      <Variable x:TypeArguments="x:String" Name="insertTaskSQL" />
      <Variable x:TypeArguments="x:String" Name="statusUpdate" />
      <Variable x:TypeArguments="x:String" Name="TransactionStartTime" />
      <Variable x:TypeArguments="x:String" Name="TransactionName" />
      <Variable x:TypeArguments="s:Exception" Name="TransactionError" />
      <Variable x:TypeArguments="x:String" Name="processFeedbackStatus" />
      <Variable x:TypeArguments="x:String" Name="sendEmailFor" />
      <Variable x:TypeArguments="x:String" Name="outerTaskStartTime" />
      <Variable x:TypeArguments="x:String" Name="outerTaskName" />
    </TryCatch.Variables>
    <TryCatch.Try>
      <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_1">
        <Flowchart.StartNode>
          <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_96">
            <Sequence DisplayName="Log Task Start -  " sap2010:WorkflowViewState.IdRef="Sequence_91">
              <Assign DisplayName="TaskName - Update status of initial run request " sap2010:WorkflowViewState.IdRef="Assign_191">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[outerTaskName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Starting feedback process</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="TaskStartTime" sap2010:WorkflowViewState.IdRef="Assign_192">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[outerTaskStartTime]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="TaskLogStart" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Framework\TaskLogStart.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="TaskName">[outerTaskName]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="TaskStartTime">[outerTaskStartTime]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[inProjectId]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[inProjectName]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="TransactionName">[TransactionName]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="TransactionId">[inTransactionID]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_2">
                <Assign DisplayName="outNoErrors = True " sap2010:WorkflowViewState.IdRef="Assign_90">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[outNoErrors]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_4">
                    <TryCatch DisplayName="Try Connect to DB" sap2010:WorkflowViewState.IdRef="TryCatch_21">
                      <TryCatch.Variables>
                        <Variable x:TypeArguments="x:String" Name="TaskName" />
                        <Variable x:TypeArguments="x:String" Name="TaskStartTime" />
                        <Variable x:TypeArguments="s:Exception" Name="TaskError" />
                      </TryCatch.Variables>
                      <TryCatch.Try>
                        <Sequence DisplayName="Get Assets" sap2010:WorkflowViewState.IdRef="Sequence_67">
                          <Sequence DisplayName="Log Task Start -  " sap2010:WorkflowViewState.IdRef="Sequence_92">
                            <Assign DisplayName="TaskName - Try Connect to DB" sap2010:WorkflowViewState.IdRef="Assign_176">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[outerTaskName]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Try Connect to DB</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="TaskStartTime" sap2010:WorkflowViewState.IdRef="Assign_177">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[outerTaskStartTime]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="TaskLogStart" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Framework\TaskLogStart.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="TaskName">[outerTaskName]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TaskStartTime">[outerTaskStartTime]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[inProjectId]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[inProjectName]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionName">[TransactionName]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionId">[inTransactionID]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="SkyNet_DB_Connection" DisplayName="Get DB connection string" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                            <ui:GetRobotAsset.Value>
                              <OutArgument x:TypeArguments="x:String">[skynetDBstring]</OutArgument>
                            </ui:GetRobotAsset.Value>
                          </ui:GetRobotAsset>
                          <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="RPA_DB_ODS" DisplayName="Get SkyNet DB cred" sap2010:WorkflowViewState.IdRef="GetRobotCredential_4" Password="[skynetDBpassword]" Username="[skynetDBuser]" />
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Convert SkyNet DB Pass" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="ConvertToUnSecureString.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <OutArgument x:TypeArguments="x:String" x:Key="UnsecureStringOutput">[skynetDBPassUnsecure]</OutArgument>
                              <InArgument x:TypeArguments="ss:SecureString" x:Key="InputSecureString">[skynetDBpassword]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <Assign DisplayName="Add User SkyNet String" sap2010:WorkflowViewState.IdRef="Assign_97">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[skynetDBstring]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[skynetDBstring.Replace("&lt;&lt;USER&gt;&gt;",skynetDBuser)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Add Pass SkyNet String" sap2010:WorkflowViewState.IdRef="Assign_98">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[skynetDBstring]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[skynetDBString.Replace("&lt;&lt;PASS&gt;&gt;",SkynetDBPassUnsecure)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:DatabaseConnect DatabaseConnection="[skynetDBconnection]" DisplayName="Connect to SkyNet DB" sap2010:WorkflowViewState.IdRef="DatabaseConnect_2" ProviderName="System.Data.OracleClient" ConnectionString="[skynetDBstring]" />
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_92">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[connectedToDB]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_20">
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_68">
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_91">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[connectedToDB]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_124">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[outNoErrors]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_45" Level="Warn" Message="[&quot;Failed to connect to skynet DB; &quot; &amp; exception.Message]" />
                              <Assign DisplayName="Assign TaskError" sap2010:WorkflowViewState.IdRef="Assign_179">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Exception">[TaskError]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:DatabaseDisconnect DatabaseConnection="[skynetDBconnection]" DisplayName="Disconnect skynet DB" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1" />
                            </Sequence>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                      <TryCatch.Finally>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TaskLogFinished" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Framework\TaskLogFinished.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="TaskName">[outerTaskName]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="TaskStartTime">[outerTaskStartTime]</InArgument>
                            <InArgument x:TypeArguments="s:Exception" x:Key="TaskError">[TaskError]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[inProjectId]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[inProjectName]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="TransactionName">[TransactionName]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="TransactionId">[inTransactionID]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </TryCatch.Finally>
                    </TryCatch>
                    <FlowStep.Next>
                      <FlowDecision x:Name="__ReferenceID3" Condition="[connectedToDB]" DisplayName="Connected to BD" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                        <FlowDecision.True>
                          <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_91">
                            <TryCatch DisplayName="Try updating Status " sap2010:WorkflowViewState.IdRef="TryCatch_25">
                              <TryCatch.Variables>
                                <Variable x:TypeArguments="x:String" Name="TaskName" />
                                <Variable x:TypeArguments="x:String" Name="TaskStartTime" />
                                <Variable x:TypeArguments="s:Exception" Name="TaskError" />
                              </TryCatch.Variables>
                              <TryCatch.Try>
                                <Sequence DisplayName="Update status of initial run request" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="selectSQL" />
                                    <Variable x:TypeArguments="sd:DataTable" Name="recordDT" />
                                  </Sequence.Variables>
                                  <Sequence DisplayName="Log Task Start -  " sap2010:WorkflowViewState.IdRef="Sequence_93">
                                    <Assign DisplayName="TaskName - Update status of initial run request " sap2010:WorkflowViewState.IdRef="Assign_180">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[outerTaskName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Update status of initial run request</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="TaskStartTime" sap2010:WorkflowViewState.IdRef="Assign_181">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[outerTaskStartTime]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="TaskLogStart" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Framework\TaskLogStart.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="TaskName">[outerTaskName]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="TaskStartTime">[outerTaskStartTime]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[inProjectId]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[inProjectName]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="TransactionName">[TransactionName]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="TransactionId">[inTransactionID]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                  <Switch x:TypeArguments="x:String" DisplayName="Switch&lt;string&gt;" Expression="[inStatus.ToUpper]" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                                    <Switch.Default>
                                      <Assign DisplayName="statusUpdate = Completed" sap2010:WorkflowViewState.IdRef="Assign_158">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[statusUpdate]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Completed</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Switch.Default>
                                    <Assign x:Key="SUCCESS" DisplayName="statusUpdate = Success" sap2010:WorkflowViewState.IdRef="Assign_165">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[statusUpdate]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Success</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign x:Key="FAILED" DisplayName="statusUpdate = Failed" sap2010:WorkflowViewState.IdRef="Assign_166">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[statusUpdate]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Failed</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign x:Key="REQUEUEMAIL" DisplayName="statusUpdate = Q" sap2010:WorkflowViewState.IdRef="Assign_167">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[statusUpdate]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Q</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign x:Key="REQUEUENOMAIL" DisplayName="Assign statusUpdate = Q" sap2010:WorkflowViewState.IdRef="Assign_168">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[statusUpdate]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Q</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Switch>
                                  <Sequence DisplayName="update status in DB" sap2010:WorkflowViewState.IdRef="Sequence_94">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_159">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[updateSQL]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">["UPDATE T_SKYNET_TASK_QUEUE SET STATUS = '" &amp; statusUpdate &amp; "', UPDATED_TIME = SYSTIMESTAMP WHERE TASK_SEQ = " &amp; inTaskSeq]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Update bot recored in T_SKYNET_TASK_QUEUE " ExistingDbConnection="[skynetDBconnection]" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_6" Sql="[updateSQL]">
                                      <ui:ExecuteNonQuery.Parameters>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:ExecuteNonQuery.Parameters>
                                    </ui:ExecuteNonQuery>
                                  </Sequence>
                                  <ui:CommentOut DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                    <ui:CommentOut.Body>
                                      <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_95">
                                        <If Condition="[statusUpdate = &quot;Q&quot;]" sap2010:WorkflowViewState.IdRef="If_15">
                                          <If.Then>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_189">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[selectSQL]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">["SELECT NO_RETRIES, RETRY_DELAY , RUN_ATTEMPTS, LAST_ATTEMPT_TIME FROM T_SKYNET_TASK_QUEUE WHERE TASK_SEQ = " &amp; inTaskSeq]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </ui:CommentOut.Body>
                                  </ui:CommentOut>
                                </Sequence>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_24">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Log Error updating status" sap2010:WorkflowViewState.IdRef="Sequence_85">
                                      <ui:LogMessage DisplayName="Log message  Error updating status" sap2010:WorkflowViewState.IdRef="LogMessage_64" Level="Warn" Message="[&quot;Error adding updating Status in the T_SKYNET_TASK_QUEUE table- TASK_SEQ: &quot; &amp; inTaskSeq &amp; &quot;  Error message: &quot; &amp; exception.Message]" />
                                      <Assign DisplayName="Assign outNoErrors" sap2010:WorkflowViewState.IdRef="Assign_155">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[outNoErrors]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign TaskError" sap2010:WorkflowViewState.IdRef="Assign_183">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:Exception">[TaskError]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                              <TryCatch.Finally>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TaskLogFinished" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Framework\TaskLogFinished.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="TaskName">[outerTaskName]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="TaskStartTime">[outerTaskStartTime]</InArgument>
                                    <InArgument x:TypeArguments="s:Exception" x:Key="TaskError">[TaskError]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[inProjectId]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[inProjectName]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="TransactionName">[TransactionName]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="TransactionId">[inTransactionID]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </TryCatch.Finally>
                            </TryCatch>
                            <FlowStep.Next>
                              <FlowDecision x:Name="__ReferenceID9" Condition="[NOT (inStatus.ToUpper = &quot;REQUEUENOMAIL&quot; or inDoNotSendBotCompletedNotification)]" DisplayName="Send email" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                                <FlowDecision.True>
                                  <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_94">
                                    <TryCatch DisplayName="Try adding Feedback record to DB" sap2010:WorkflowViewState.IdRef="TryCatch_27">
                                      <TryCatch.Variables>
                                        <Variable x:TypeArguments="x:String" Name="TaskName" />
                                        <Variable x:TypeArguments="x:String" Name="TaskStartTime" />
                                        <Variable x:TypeArguments="s:Exception" Name="TaskError" />
                                      </TryCatch.Variables>
                                      <TryCatch.Try>
                                        <Sequence DisplayName="Add Feedback record to DB queue" sap2010:WorkflowViewState.IdRef="Sequence_88">
                                          <Sequence DisplayName="Log Task Start -  " sap2010:WorkflowViewState.IdRef="Sequence_90">
                                            <Assign DisplayName="TaskName - Add Feedback record to DB queue " sap2010:WorkflowViewState.IdRef="Assign_170">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[outerTaskName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Add Feedback record to DB queue</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign DisplayName="TaskStartTime" sap2010:WorkflowViewState.IdRef="Assign_171">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[outerTaskStartTime]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="TaskLogStart" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Framework\TaskLogStart.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="TaskName">[outerTaskName]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="TaskStartTime">[outerTaskStartTime]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[inProjectId]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[inProjectName]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="TransactionName">[TransactionName]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="TransactionId">[inTransactionID]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                          <If Condition="[inDoNotSendBotCompletedNotification]" DisplayName="If inSendBotCompletedNotification" sap2010:WorkflowViewState.IdRef="If_14">
                                            <If.Then>
                                              <Assign DisplayName="processFeedbackStatus = No Mail" sap2010:WorkflowViewState.IdRef="Assign_188">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[sendEmailFor]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">NONE</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <Assign DisplayName="processFeedbackStatus = N" sap2010:WorkflowViewState.IdRef="Assign_187">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[sendEmailFor]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">ALL</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Else>
                                          </If>
                                          <Assign DisplayName="processFeedbackStatus = N" sap2010:WorkflowViewState.IdRef="Assign_190">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[processFeedbackStatus]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">N</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Build Task input query" sap2010:WorkflowViewState.IdRef="Assign_161">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[insertTaskSQL]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">["INSERT INTO T_SKYNET_TASK_QUEUE (TASK_SEQ, TASK_TYPE, TASK_REQUESTOR, PROCESS_NM, AGENT_NM, STATUS, CREATED_TIME, EMAIL_BODY, EMAIL_SUBJECT, SEND_EMAIL_FOR) VALUES (SEQ_SKYNET_TASK_SK.NEXTVAL, 'FEEDBACK', '" &amp; inRecipient &amp; "', '" &amp; inStatus &amp; "', NULL, '" &amp; processFeedbackStatus &amp; "', SYSDATE, '" &amp; inBody &amp; "', '" &amp; inSubject &amp; "', '" &amp; sendEmailFor &amp; "')"]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Insert T_SKYNET_TASK_QUEUE " ExistingDbConnection="[skynetDBconnection]" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_8" Sql="[insertTaskSQL]">
                                            <ui:ExecuteNonQuery.Parameters>
                                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                            </ui:ExecuteNonQuery.Parameters>
                                          </ui:ExecuteNonQuery>
                                          <ui:LogMessage DisplayName="Log data row added" sap2010:WorkflowViewState.IdRef="LogMessage_65" Level="Trace" Message="[&quot;Feedback added to queue.  subject: &quot; &amp; inSubject]" />
                                        </Sequence>
                                      </TryCatch.Try>
                                      <TryCatch.Catches>
                                        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_25">
                                          <ActivityAction x:TypeArguments="s:Exception">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Log Error adding Feedback record" sap2010:WorkflowViewState.IdRef="Sequence_89">
                                              <ui:LogMessage DisplayName="Log message  Error adding Feedback record" sap2010:WorkflowViewState.IdRef="LogMessage_66" Level="Warn" Message="[&quot;Error adding feedback record to the table T_SKYNET_TASK_QUEUE, Subject: &quot; &amp; inSubject &amp; &quot; To: &quot;  &amp; inRecipient &amp; &quot; email body: &quot; &amp; inBody &amp; &quot;  run record TASK_SEQ: &quot; &amp; inTaskSeq &amp; &quot;  Error message: &quot; &amp; exception.Message]" />
                                              <Assign DisplayName=" outNoErrors" sap2010:WorkflowViewState.IdRef="Assign_169">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[outNoErrors]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign TaskError" sap2010:WorkflowViewState.IdRef="Assign_184">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="s:Exception">[TaskError]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </ActivityAction>
                                        </Catch>
                                      </TryCatch.Catches>
                                      <TryCatch.Finally>
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TaskLogFinished" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Framework\TaskLogFinished.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="TaskName">[outerTaskName]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="TaskStartTime">[outerTaskStartTime]</InArgument>
                                            <InArgument x:TypeArguments="s:Exception" x:Key="TaskError">[TaskError]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[inProjectId]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[inProjectName]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="TransactionName">[TransactionName]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="TransactionId">[inTransactionID]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </TryCatch.Finally>
                                    </TryCatch>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_7">
                                        <ui:DatabaseDisconnect DatabaseConnection="[skynetDBconnection]" DisplayName="Disconnect" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_2" />
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowDecision.True>
                                <FlowDecision.False>
                                  <x:Reference>__ReferenceID0</x:Reference>
                                </FlowDecision.False>
                              </FlowDecision>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.True>
                        <FlowDecision.False>
                          <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_11">
                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_56" Level="Warn" Message="Unable to connect to Skynet DB in the readEmail Module" />
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_67">
                                <Assign DisplayName="outNoErrors = False" sap2010:WorkflowViewState.IdRef="Assign_136">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[outNoErrors]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_68">
                                    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_13" Text="Failed to connect to DB.  Exit Module" />
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.False>
                      </FlowDecision>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </Flowchart.StartNode>
        <x:Reference>__ReferenceID1</x:Reference>
        <x:Reference>__ReferenceID2</x:Reference>
        <x:Reference>__ReferenceID0</x:Reference>
        <x:Reference>__ReferenceID3</x:Reference>
        <x:Reference>__ReferenceID4</x:Reference>
        <x:Reference>__ReferenceID5</x:Reference>
        <x:Reference>__ReferenceID6</x:Reference>
        <x:Reference>__ReferenceID7</x:Reference>
        <x:Reference>__ReferenceID8</x:Reference>
        <x:Reference>__ReferenceID9</x:Reference>
        <x:Reference>__ReferenceID10</x:Reference>
      </Flowchart>
    </TryCatch.Try>
    <TryCatch.Catches>
      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_18">
        <ActivityAction x:TypeArguments="s:Exception">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
          </ActivityAction.Argument>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_62">
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_38" Level="Warn" Message="[&quot;SkyNet - Error in assigning feedback: &quot; + exception.Message]" />
            <Assign sap2010:WorkflowViewState.IdRef="Assign_69">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[outNoErrors]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign TaskError" sap2010:WorkflowViewState.IdRef="Assign_186">
              <Assign.To>
                <OutArgument x:TypeArguments="s:Exception">[TransactionError]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[connectedToDB]" sap2010:WorkflowViewState.IdRef="If_13">
              <If.Then>
                <ui:DatabaseDisconnect DatabaseConnection="[skynetDBconnection]" DisplayName="Disconnect" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_3" />
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </Catch>
    </TryCatch.Catches>
    <TryCatch.Finally>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TaskLogFinished" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Framework\TaskLogFinished.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="TaskName">[outerTaskName]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="TaskStartTime">[outerTaskStartTime]</InArgument>
          <InArgument x:TypeArguments="s:Exception" x:Key="TaskError" />
          <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[inProjectId]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[inProjectName]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="TransactionName">[TransactionName]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="TransactionId">[inTransactionID]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </TryCatch.Finally>
    <sads:DebugSymbol.Symbol>d2hDOlxQcm9ncmFtRGF0YVxVaVBhdGhcUHJvamVjdHNcQ29kZVJldmlld0JvdC4xLjAuNjg5Ny4xOTQ5NVxsaWJcbmV0NDVcU2t5TmV0X1Byb2Nlc3NGZWVkYmFja19tb2R1bGUueGFtbOsBJgcmNgEHKwcrNgEGAX8BiQEBBQHSAQHYAQEEMAcwNgEDIQchNgECoAED7AUOAgEBtgEHuwUTAgEj3wUH6QUfAgEVwwUL2gUWAgECuQEN1AEYAwHQAtcBEd4BGgMBzALhARXeAiADAekB4AJH4AJYAwHnAZQFHZQFxgEDAeUBlwUhngUqAwHhAaEFJaEFjQEDAeAB4wIdgwQoAwGFAYUET4UErAEDAYIBhgUphgW8AQIBf4gEJYMFMAIBJOEFQ+EFUgIBIeQFROQFUQIBH+IFSOIFXAIBHecFSOcFWQIBG+YFSuYFWwIBGeUFRuUFVQIBF98FtgHfBdYBAgEWxAUNxAXIAQIBEsUFDcwFFgIBDs0FDdQFFgIBCdUFDdkFEgIBA7oBD8EBGAMB4wLCAQ/JARgDAd8CygEP0wEnAwHRAtwBPdwBQQMBzwLZAT7ZAUsDAc0C6AEZqgIkAwGOAtICGdwCMQMB/gGyAh3NAigDAeoBlAWLAZQFwwEDAeYBnAVNnAVSAwHkAZkFTpkFWwMB4gHqAiHYAywDAaQB9wMhgQQ5AwGUAeADJfIDMAMBhgGGBVOGBWkDAYABjwQp2AQ0AgFG9wQpgQVBAgE24AQt8gQ4AgElxAV7xAXFAQIBE8oFOcoFPgIBEccFOscFRwIBD9IFO9IFRgIBDM8FPM8FTgIBCtUFG9UFLAIBBNcFEdcFpAECAQa/ATq/AVMDAeYCvAE7vAFKAwHkAscBOscBUQMB4gLEATvEAU8DAeACzAFLzAFaAwHdAs4BTM4BWQMB2wLNAVDNAWQDAdkC0QFQ0QFhAwHXAtABUtABYwMB1QLPAU7PAV0DAdMCygG0AcoB0QEDAdIC6QEbhAImAwG1AoUCG4kCLgMBsQKKAhuKAvABAwGrAosCG5ACMwMBpQKRAhuYAiQDAZ8CmQIboAIkAwGZAqECG6EC/gEDAZMCogIbqQIkAwGPAtQCVdQCZAMBjALXAlbXAmMDAYoC1QJa1QJuAwGIAtoCWtoCawMBhgLZAlzZAm0DAYQC2AJY2AJnAwGCAtYCWdYCZAMBgALSAsgB0gLoAQMB/wGzAh+6AigDAfoBuwIfwgIoAwH2AcMCH8MC2AEDAfMBxAIfywIoAwHuAcwCH8wCvAEDAesB7wIjigMuAwHJAYsDI7YDLAMBsgG3AyPFAy4DAaYBxgMj1wMzAwGlAfkDXfkDbAMBogH8A178A2sDAaAB+gNi+gN2AwGeAf8DYv8DcwMBnAH+A2T+A3UDAZoB/QNg/QNvAwGYAfsDYfsDbAMBlgH3A9AB9wPwAQMBlQHhAyfhA9QCAwGQAeIDJ+kDMAMBjAHqAyfxAzADAYcBkAQrqwQ2AgForAQrwQQwAgFdwgQryQQ0AgFZygQr0QQ0AgFP0gQr1gRAAgFK1wQr1wTnAQIBR/kEZfkEdAIBRPwEZvwEcwIBQvoEavoEfgIBQP8Eav8EewIBPv4EbP4EfQIBPP0EaP0EdwIBOvsEafsEdAIBOPcE2AH3BPgBAgE34QQv4QT0AwIBL+IEL+kEOAIBK+oEL/EEOAIBJtcFO9cFUQIBB+oBHfEBJgMByALyAR35ASYDAcQC+gEdgwI1AwG2AocCR4cCVwMBswKFAkyFAmIDAbICigJRigJdAwGwAooC3QGKAu0BAwGuAooCvwGKAtMBAwGsAo0CZI0CegMBqQKOAmeOAnkDAacCiwLKAYsC6AEDAaYClgJGlgKDAQMBogKTAkeTAlcDAaACngJGngKLAQMBnAKbAkebAlcDAZoCoQK9AaEC1wEDAZgCoQLpAaEC+wEDAZYCoQJCoQJYAwGUAqcCR6cCSwMBkgKkAkikAlcDAZACuAJLuAJQAwH9AbUCTLUCWwMB+wHAAkvAAlADAfkBvQJMvQJZAwH3AcMCjQHDAtUBAwH0AckCTckCWAMB8QHGAk7GAlkDAe8BzAJJzAJfAwHsAfACJfcCLgMB3AH4AiX/Ai4DAdgBgAMliQM9AwHKAYsDdIsDiAEDAbMBlgMlnQMuAwHFAZ4DJaUDLgMBwQGmAyWtAy4DAb0BrgMltQMuAwG5AY0DJ5QDMAMBtQG4AyW/Ay4DAawBwAMlxAM6AwGnAeEDrAHhA9ECAwGRAecDU+cDWAMBjwHkA1TkA2EDAY0B7wNV7wNgAwGKAewDVuwDYQMBiAGRBC2YBDYCAXuZBC2gBDYCAXehBC2qBEUCAWmsBDmsBGACAV6uBC+1BDgCAWS4BC+/BDgCAWDHBFbHBFcCAVzEBFfEBG4CAVrPBFbPBPADAgFSzARXzARmAgFQ0gTcAdIE8gECAU3SBKsC0gS8AgIBS9cEoQHXBOQBAgFI4QS7AeEE8QMCATDnBFvnBGACAS7kBFzkBGkCASzvBF3vBGgCASnsBF7sBGkCASfvAUjvAVkDAcsC7AFJ7AFYAwHJAvcBSPcBXwMBxwL0AUn0AV0DAcUC/AFZ/AFoAwHCAv4BWv4BZwMBwAL9AV79AXIDAb4CgQJegQJvAwG8AoACYIACcQMBugL/AVz/AWsDAbgC+gHCAfoB3wEDAbcC9QJQ9QJ0AwHfAfICUfICYAMB3QH9AlD9AmcDAdsB+gJR+gJlAwHZAYIDYYIDcAMB1gGEA2KEA28DAdQBgwNmgwN6AwHSAYcDZocDdwMB0AGGA2iGA3kDAc4BhQNkhQNzAwHMAYADygGAA+cBAwHLAZsDUJsDVwMByAGYA1GYA18DAcYBowNQowNWAwHEAaADUaADXwMBwgGrA1CrA1EDAcABqANRqANfAwG+AbMDULMDUQMBvAGwA1GwA18DAboBkgNSkgNbAwG4AY8DU48DYQMBtgG9A1C9A9kBAwGvAboDUboDXAMBrQHAA+UBwAP7AQMBqgHAA7QCwAPBAgMBqAGWBFiWBHcCAX6TBFmTBGgCAXyeBFieBG8CAXqbBFmbBG0CAXijBGmjBHgCAXWlBGqlBHcCAXOkBG6kBIIBAgFxqARuqAR/AgFvpwRwpwSBAQIBbaYEbKYEewIBa6EE0gGhBO8BAgFqswRaswReAgFnsARbsARpAgFlvQRavQRdAgFjugRbugRpAgFh</sads:DebugSymbol.Symbol>
  </TryCatch>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_191" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_192" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_19" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_91" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_90" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_176" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_177" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_21" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_92" sap:VirtualizedContainerService.HintSize="336,411">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetRobotAsset_1" sap:VirtualizedContainerService.HintSize="336,22" />
      <sap2010:ViewStateData Id="GetRobotCredential_4" sap:VirtualizedContainerService.HintSize="336,22" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_16" sap:VirtualizedContainerService.HintSize="336,87" />
      <sap2010:ViewStateData Id="Assign_97" sap:VirtualizedContainerService.HintSize="336,60" />
      <sap2010:ViewStateData Id="Assign_98" sap:VirtualizedContainerService.HintSize="336,60" />
      <sap2010:ViewStateData Id="DatabaseConnect_2" sap:VirtualizedContainerService.HintSize="336,59" />
      <sap2010:ViewStateData Id="Assign_92" sap:VirtualizedContainerService.HintSize="336,60" />
      <sap2010:ViewStateData Id="Sequence_67" sap:VirtualizedContainerService.HintSize="358,1185">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_91" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_124" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_45" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_179" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="DatabaseDisconnect_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_68" sap:VirtualizedContainerService.HintSize="336,577">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_20" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_23" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_21" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_180" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_181" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_24" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_93" sap:VirtualizedContainerService.HintSize="502,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_158" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_165" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_166" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_167" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_168" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Switch`1_2" sap:VirtualizedContainerService.HintSize="502,310" />
      <sap2010:ViewStateData Id="Assign_159" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExecuteNonQuery_6" sap:VirtualizedContainerService.HintSize="314,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_94" sap:VirtualizedContainerService.HintSize="502,312">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_189" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="464,207" />
      <sap2010:ViewStateData Id="Sequence_95" sap:VirtualizedContainerService.HintSize="486,331">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="502,409" />
      <sap2010:ViewStateData Id="Sequence_84" sap:VirtualizedContainerService.HintSize="524,1326">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_64" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_155" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_183" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_85" sap:VirtualizedContainerService.HintSize="336,415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_24" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_26" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_25" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="Assign_170" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_171" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_17" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_90" sap:VirtualizedContainerService.HintSize="509,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_188" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_187" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="Assign_190" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_161" sap:VirtualizedContainerService.HintSize="509,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteNonQuery_8" sap:VirtualizedContainerService.HintSize="509,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_65" sap:VirtualizedContainerService.HintSize="509,91" />
      <sap2010:ViewStateData Id="Sequence_88" sap:VirtualizedContainerService.HintSize="531,882">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_66" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_169" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_184" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_89" sap:VirtualizedContainerService.HintSize="336,415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_25" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_27" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_27" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DatabaseDisconnect_2" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">190,1009</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_94">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">20,874</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">120,926 120,956 290,956 290,1009</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_4" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">241.5,726.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">241.5,770 120,770 120,874</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">311.5,770 341.5,770 341.5,979 290,979 290,1009</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">20,614</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">220,640 276.5,640 276.5,726.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_56" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_136" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Comment_13" sap:VirtualizedContainerService.HintSize="314,55">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">503,712.5</av:Point>
            <av:Size x:Key="ShapeSize">314,55</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_67">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">539,600</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">660,660 660,712.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">560,504.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">660,555.5 660,585.5 660.5,585.5 660.5,600</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="96,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">251,486.5</av:Point>
            <av:Size x:Key="ShapeSize">96,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">347,530 560,530</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">251,530 120,530 120,614</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,389.2</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,440.2 300,486.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">178.4,300</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,360 300,389.2</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_96">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,206.4</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,257.4 300,287.4 299.4,287.4 299.4,300</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="928,1155">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,206.4</av:PointCollection>
            <x:Double x:Key="Width">913.80000000000018</x:Double>
            <x:Double x:Key="Height">1118.8000000000004</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_38" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Assign_69" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_186" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="DatabaseDisconnect_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_62" sap:VirtualizedContainerService.HintSize="486,663">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_18" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_28" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_19" sap:VirtualizedContainerService.HintSize="418,314">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="mailhub_feedback_queue_module_1" sap:VirtualizedContainerService.HintSize="986,1462" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>