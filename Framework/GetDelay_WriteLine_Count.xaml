<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetDelay_WriteLine_Count"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sx="clr-namespace:System.Xml;assembly=System.Xml"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="FilePath" Type="InArgument(x:String)" />
    <x:Property Name="DelayActivityCount" Type="OutArgument(x:String)" />
    <x:Property Name="WriteLineActivityCount" Type="OutArgument(x:String)" />
    <x:Property Name="DelayTotalTime" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetDelay_WriteLine_Count_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.XPath</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetDelay_WriteLine_Count" sap2010:WorkflowViewState.IdRef="Sequence_8">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:GenericValue" Default="[0]" Name="delayCount" />
      <Variable x:TypeArguments="x:String" Name="fileContents" />
      <Variable x:TypeArguments="sx:XmlDocument" Default="[new XmlDocument()]" Name="diagramTree" />
      <Variable x:TypeArguments="sx:XmlNodeList" Name="nodeList" />
      <Variable x:TypeArguments="sx:XmlNodeList" Name="nodeListWriteLine" />
      <Variable x:TypeArguments="ui:GenericValue" Default="[0]" Name="countValue" />
      <Variable x:TypeArguments="ui:GenericValue" Name="activityName" />
      <Variable x:TypeArguments="x:TimeSpan" Default="[new TimeSpan(00,00,00)]" Name="timeValue" />
      <Variable x:TypeArguments="x:TimeSpan" Name="timeSum" />
    </Sequence.Variables>
    <ui:ReadTextFile Content="[fileContents]" DisplayName="Read XAML file" FileName="[FilePath]" sap2010:WorkflowViewState.IdRef="ReadTextFile_3" />
    <InvokeMethod DisplayName="Create XML tree" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="LoadXml">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="sx:XmlDocument">[diagramTree]</InArgument>
      </InvokeMethod.TargetObject>
      <InArgument x:TypeArguments="x:String">[fileContents]</InArgument>
    </InvokeMethod>
    <Sequence DisplayName="Sequence_GetDelay" sap2010:WorkflowViewState.IdRef="Sequence_40">
      <Assign DisplayName="Assign_ActivityName" sap2010:WorkflowViewState.IdRef="Assign_31">
        <Assign.To>
          <OutArgument x:TypeArguments="ui:GenericValue">[activityName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="ui:GenericValue">["Delay"]</InArgument>
        </Assign.Value>
      </Assign>
      <InvokeMethod DisplayName="Get Variable Nodes" sap2010:WorkflowViewState.IdRef="InvokeMethod_11" MethodName="GetElementsByTagName">
        <InvokeMethod.Result>
          <OutArgument x:TypeArguments="sx:XmlNodeList">[nodeList]</OutArgument>
        </InvokeMethod.Result>
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="sx:XmlDocument">[diagramTree]</InArgument>
        </InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="x:String">[activityName]</InArgument>
      </InvokeMethod>
      <ui:ForEach x:TypeArguments="sx:XmlElement" DisplayName="For each_Iterate All Nodes" sap2010:WorkflowViewState.IdRef="ForEach`1_12" Values="[nodeList]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="sx:XmlElement">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sx:XmlElement" Name="item" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_38">
              <ui:ForEach x:TypeArguments="sx:XmlAttribute" DisplayName="For each_Iterate All Attributes in a Node" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[item.Attributes]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="sx:XmlAttribute">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sx:XmlAttribute" Name="data" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_37">
                      <If Condition="[data.Name=&quot;Duration&quot;]" DisplayName="If_Check if attribute name is Duration" sap2010:WorkflowViewState.IdRef="If_9">
                        <If.Then>
                          <Sequence DisplayName="Sequence_Sum Delay value" sap2010:WorkflowViewState.IdRef="Sequence_36">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="s:DateTime" Name="dtValue" />
                            </Sequence.Variables>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_32">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[dtValue]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[DateTime.Parse(data.Value)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:TimeSpan">[timeValue]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:TimeSpan">[new TimeSpan(dtValue.Hour,dtValue.Minute,dtValue.Second)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:TimeSpan">[timeSum]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:TimeSpan">[timeSum+timeValue]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
                              <Assign.To>
                                <OutArgument x:TypeArguments="ui:GenericValue">[delayCount]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="ui:GenericValue">[delayCount+1]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
      <Assign DisplayName="Assign_DelayActivityCount for OUT Variable" sap2010:WorkflowViewState.IdRef="Assign_36">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[DelayActivityCount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[delayCount.ToString]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign_DelayTotalTime for Out Variable" sap2010:WorkflowViewState.IdRef="Assign_37">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[DelayTotalTime]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[timeSum.ToString]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="Sequence_GetWriteLine" sap2010:WorkflowViewState.IdRef="Sequence_45">
      <Assign DisplayName="Assign_Activity Name" sap2010:WorkflowViewState.IdRef="Assign_38">
        <Assign.To>
          <OutArgument x:TypeArguments="ui:GenericValue">[activityName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="ui:GenericValue">["WriteLine"]</InArgument>
        </Assign.Value>
      </Assign>
      <InvokeMethod DisplayName="Get Variable Nodes" sap2010:WorkflowViewState.IdRef="InvokeMethod_12" MethodName="GetElementsByTagName">
        <InvokeMethod.Result>
          <OutArgument x:TypeArguments="sx:XmlNodeList">[nodeListWriteLine]</OutArgument>
        </InvokeMethod.Result>
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="sx:XmlDocument">[diagramTree]</InArgument>
        </InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="x:String">[activityName]</InArgument>
      </InvokeMethod>
      <ui:ForEach x:TypeArguments="sx:XmlElement" DisplayName="For each_Iterate all nodes" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[nodeListWriteLine]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="sx:XmlElement">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sx:XmlElement" Name="item" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_42">
              <If Condition="[item.Name.ToString.Contains(activityName.ToString)]" DisplayName="If_Check if given ActivityName matches with the Node Item" sap2010:WorkflowViewState.IdRef="If_10">
                <If.Then>
                  <Sequence DisplayName="Sequence_Increment Value" sap2010:WorkflowViewState.IdRef="Sequence_41">
                    <Assign DisplayName="Assign_Increment Count variable" sap2010:WorkflowViewState.IdRef="Assign_39">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ui:GenericValue">[countValue]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ui:GenericValue">[countValue+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
      <Assign DisplayName="Assign_WriteLineActivityCount for Out Variable" sap2010:WorkflowViewState.IdRef="Assign_41">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[WriteLineActivityCount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[countValue.ToString]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <sads:DebugSymbol.Symbol>d1VEOlxHRUdEQ1xTSzMzODU3NVxDb2RlUmV2aWV3Qk9UXENvZGVSZXZpZXdCT1RcRnJhbWV3b3JrXEdldERlbGF5X1dyaXRlTGluZV9Db3VudC54YW1sQkkD8wEOAgEBSztLQAIBBU06TU8CAQRQO1BAAgEDUjZSUAIBAlUFVZUBAgFVVgVbFAIBUFwFvQEQAgEgvgEF8QEQAgEGVVVVYQIBWFUeVS4CAVZaLlo8AgFTWDZYQwIBUV0HZBACAUxlB20WAgFGbgesARQCASqtAQe0ARACASa1AQe8ARACASG/AQfGARACARzHAQfPARYCARbQAQfoARQCAQvpAQfwARACAQdiOWJCAgFPXzpfSAIBTWc5Z0MCAUpqOGpFAgFIbDBsPgIBR26SAW6eAQIBRXQNqQEYAgErsgEysgFHAgEprwEzrwFHAgEnugEyugFEAgEktwEztwFDAgEixAE5xAFGAgEfwQE6wQFIAgEdyQE5yQFMAgEazAE4zAFFAgEYzgEwzgE+AgEX0AGSAdABpwECARXWAQ3lARgCAQzuATLuAUcCAQrrATPrAUsCAQh1D6gBHAIBLNcBD+QBFAIBDXWrAXW+AQIBRHsVpQEgAgEt1wEd1wFTAgEO2QET4gEeAgEPfBekARwCAS7aARXhAR4CARB8JXxHAgEvfhuiASYCATDfAUffAVUCARPcAUjcAVQCARGCAR2JASYCAUCKAR2RASYCATySAR2ZASYCATaaAR2hASYCATGHAUqHAWYCAUOEAUuEAVQCAUGPAUqPAYQBAgE/jAFLjAFWAgE9lwFKlwFdAgE5lAFLlAFUAgE3nwFPnwFdAgE0nAFQnAFcAgEy</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ReadTextFile_3" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="InvokeMethod_10" sap:VirtualizedContainerService.HintSize="314,132" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="540,60" />
      <sap2010:ViewStateData Id="InvokeMethod_11" sap:VirtualizedContainerService.HintSize="540,132" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="486,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_11" sap:VirtualizedContainerService.HintSize="502,466">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="524,590">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_12" sap:VirtualizedContainerService.HintSize="540,724">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="540,60" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="540,60" />
      <sap2010:ViewStateData Id="Sequence_40" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="InvokeMethod_12" sap:VirtualizedContainerService.HintSize="242,132" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="222,175">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_13" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_45" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="336,537">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetDelay_WriteLine_Count_1" sap:VirtualizedContainerService.HintSize="376,697" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>