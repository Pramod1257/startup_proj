<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetTryCatch_EmptyCatch_Count"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sx="clr-namespace:System.Xml;assembly=System.Xml"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="FilePath" Type="InArgument(x:String)" />
    <x:Property Name="TryCatchCount" Type="OutArgument(x:String)" />
    <x:Property Name="EmptyCatchBlockCount" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetTryCatch_EmptyCatch_Count_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.XPath</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetTryCatch_EmptyCatch_Count" sap2010:WorkflowViewState.IdRef="Sequence_11">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="fileContents" />
      <Variable x:TypeArguments="sx:XmlDocument" Default="[new XmlDocument()]" Name="diagramTree" />
      <Variable x:TypeArguments="sx:XmlNodeList" Name="nodeList" />
      <Variable x:TypeArguments="ui:GenericValue" Default="[0]" Name="acitivityCount" />
      <Variable x:TypeArguments="ui:GenericValue" Name="activityName" />
      <Variable x:TypeArguments="ui:GenericValue" Default="[0]" Name="catchCount" />
      <Variable x:TypeArguments="x:TimeSpan" Name="timeSum" />
      <Variable x:TypeArguments="x:TimeSpan" Default="[new TimeSpan(00,00,00)]" Name="timeCount" />
    </Sequence.Variables>
    <ui:ReadTextFile Content="[fileContents]" DisplayName="Read XAML file" FileName="[FilePath]" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
    <InvokeMethod DisplayName="Create XML tree" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="LoadXml">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="sx:XmlDocument">[diagramTree]</InArgument>
      </InvokeMethod.TargetObject>
      <InArgument x:TypeArguments="x:String">[fileContents]</InArgument>
    </InvokeMethod>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
      <Assign.To>
        <OutArgument x:TypeArguments="ui:GenericValue">[activityName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="ui:GenericValue">["Catch"]</InArgument>
      </Assign.Value>
    </Assign>
    <InvokeMethod DisplayName="Get Variable Nodes" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="GetElementsByTagName">
      <InvokeMethod.Result>
        <OutArgument x:TypeArguments="sx:XmlNodeList">[nodeList]</OutArgument>
      </InvokeMethod.Result>
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="sx:XmlDocument">[diagramTree]</InArgument>
      </InvokeMethod.TargetObject>
      <InArgument x:TypeArguments="x:String">[activityName]</InArgument>
    </InvokeMethod>
    <ui:ForEach x:TypeArguments="sx:XmlElement" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[nodeList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sx:XmlElement">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sx:XmlElement" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <ui:ForEach x:TypeArguments="sx:XmlAttribute" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[item.Attributes]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="sx:XmlAttribute">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sx:XmlAttribute" Name="data" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_16">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Int32" Name="test" />
                    </Sequence.Variables>
                    <If Condition="[data.Name=&quot;x:TypeArguments&quot;]" sap2010:WorkflowViewState.IdRef="If_6">
                      <If.Then>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[test]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[item.InnerXml.ToString.Length - item.InnerXml.ToString.Replace("&lt;/"," ").Length]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:GenericValue">[acitivityCount]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:GenericValue">[acitivityCount+1]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[test &gt; 2]" sap2010:WorkflowViewState.IdRef="If_5">
                            <If.Else>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="ui:GenericValue">[catchCount]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="ui:GenericValue">[catchCount+1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[TryCatchCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[acitivityCount]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[EmptyCatchBlockCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[catchCount]</InArgument>
      </Assign.Value>
    </Assign>
    <sads:DebugSymbol.Symbol>d15EOlxVc2Vyc1w4NTAwMzc3MDJcRG93bmxvYWRzXENSQkF6ZWVtICgyKVxDUkJBemVlbVxGcmFtZXdvcmtcR2V0VHJ5Q2F0Y2hfRW1wdHlDYXRjaF9Db3VudC54YW1sLUkDugEOAgEBTDpMTwIBBU47TkACAQRQO1BAAgEDUjZSUAIBAlQFVJUBAgE4VQVaFAIBM1sFYg4CAS9jBWsUAgEpbAWoARICAQ6pAQWwAQ4CAQqxAQW4AQ4CAQZUVVRhAgE7VB5ULgIBOVkuWTwCATZXNldDAgE0YDdgQAIBMl04XUYCATBlN2VBAgEtaDZoQwIBK2ouajwCASpsfWyJAQIBKHILpQEWAgEPrgEwrgFAAgENqwExqwFAAgELtgEwtgE8AgEJswExswFHAgEHcw2kARoCARBzhwFzmgECASd5E6EBHgIBEX0VoAEaAgESfSN9TAIBE38ZngEkAgEUgAEbhwEkAgEjiAEbjwEkAgEekAEbnQEgAgEVhQFFhQGZAQIBJoIBRoIBTAIBJI0BTY0BXwIBIYoBTooBXgIBH5ABKZABOAIBFpIBH5sBKgIBGJMBIZoBKgIBGZgBU5gBYQIBHJUBVJUBYAIBGg==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ReadTextFile_2" sap:VirtualizedContainerService.HintSize="687,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_4" sap:VirtualizedContainerService.HintSize="687,132" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="687,60" />
      <sap2010:ViewStateData Id="InvokeMethod_5" sap:VirtualizedContainerService.HintSize="687,132" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="486,656">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="611,804" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="633,928">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="649,1062">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="671,1186">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="687,1320">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="687,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="687,60" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="709,2187">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetTryCatch_EmptyCatch_Count_1" sap:VirtualizedContainerService.HintSize="749,2267" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>